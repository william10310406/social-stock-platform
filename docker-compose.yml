services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock-insight-frontend
    ports:
      - "5173:5173"
      - "5174:5174"  # HMR WebSocket port
    networks:
      - stock-insight-net
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock-insight-backend
    ports:
      - "5001:5000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "/app/scripts/healthcheck.py", "--docker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - stock-insight-net
    volumes:
      - ./backend:/app

  db:
    image: postgres:alpine
    container_name: stock-insight-db
    ports:
      - "5433:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - stock-insight-net

  redis:
    image: "redis:alpine"
    container_name: stock-insight-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data
    networks:
      - stock-insight-net

volumes:
  db_data:
  redis_data:

networks:
  stock-insight-net:
    driver: bridge
