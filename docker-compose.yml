services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock-insight-frontend
    ports:
      - "5173:5173"
      - "5174:5174"  # HMR WebSocket port
    environment:
      - NODE_ENV=development
      - DOCKER_ENV=true
      - BACKEND_URL=http://stock-insight-backend:5000
    networks:
      - stock-insight-net
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock-insight-backend
    ports:
      - "5001:5000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "/app/scripts/healthcheck.py", "--docker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - stock-insight-net
    volumes:
      - ./backend:/app
      - ./security:/app/security
      - ./exports:/app/exports
      - ./scripts:/app/scripts

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: stock-insight-db
    ports:
      - "1433:1433"
    env_file:
      - .env
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=Express
    user: "0:0"  # Run as root to avoid permission issues
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${MSSQL_SA_PASSWORD}", "-Q", "SELECT 1", "-C"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - db_data:/var/opt/mssql
      - ./mssql_backup:/mssql_backup
      - ./scripts:/app/scripts
    networks:
      - stock-insight-net

  redis:
    image: "redis:alpine"
    container_name: stock-insight-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data
    networks:
      - stock-insight-net

volumes:
  db_data:
  redis_data:

networks:
  stock-insight-net:
    driver: bridge
